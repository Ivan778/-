.model small
.stack 100h

.data

x dw 4
y dw 2

k dw 2
dvsn dw 10h

mtxI dw 0
trMtxI dw 0

mtx dw 1, 2, 3, 4, 5, 6, 7, 8
trMtx dw 8 dup(?)

ent db 10, 13, '$'
space db "  ", '$'

.code

cout macro s                      ; show any string
    
    pusha
    
    lea dx, s
    mov ah, 09h
    int 21h
    
    popa
    
endm

showNumber PROC
    
    pusha
    
    xor cx, cx        ; counter of numbers 
    
loopa:

    cmp ax, 0
    je endLoopa
    
    xor dx, dx        ; here will be digit
    div dvsn          ; divide on 10h
    push dx           ; remember residue
    
    inc cx            ; c++ 
    
    jmp loopa
    
endLoopa:

    pop dx
    
    cmp dx, 0Ah
    jge letter
    
    add dl, '0'
    mov ah, 06h
    int 21h
    
    dec cx
    
    cmp cx, 0
    je endShow
    
    jmp endLoopa
    
letter:

    add dx, 'A' - 10
    mov ah, 06h
    int 21h    
    
    dec cx
    
    cmp cx, 0
    je endShow
    
    jmp endLoopa
        
endShow:
    
    popa
    
    ret
    
ENDP    

start:

    mov ax, @data
    mov ds, ax
    
    xor si, si
    sub si, 2
    
    xor bx, bx
    
loopI:    
    
    mov dx, x
    add dx, x
    sub dx, 2
    
    cmp si, dx
    je endLoop
    
    add si, 2
    xor bx, bx
      
loopJ:
    
    cmp bx, y
    je loopI
    
    mov ax, x
    mul k
    
    mul bx
    
    add ax, si
    mov mtxI, si
    
    mov si, ax
    mov ax, mtx[si]
    
    mov si, trMtxI
    mov trMtx[si], ax
    
    add si, 2
    mov trMtxI, si
    
    mov si, mtxI
    
    inc bx
    
    jmp loopJ          

endLoop:
    
    mov ax, x
    mul y
    mul k
    
    xor si, si
    mov dx, ax
    mov cx, y
    
loopaI:
    
    cmp si, dx
    je allDone
    
    mov ax, trMtx[si]
    call showNumber
    
    add si, 2
    dec cx
    
    cmp cx, 0
    je newLine
    
    cout space
    
    jmp loopaI
    
newLine:

    cout ent
    mov cx, y
    jmp loopaI    

allDone:
    
    mov ax, 4C00h
    int 21h

end start